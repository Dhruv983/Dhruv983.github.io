{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\OneDrive\\\\Desktop\\\\GIT website\\\\Without GIT\\\\src\\\\components\\\\Projects.jsx\";\nimport React from 'react';\nimport '../styles/Projects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  const projects = [{\n    title: \"Spring PetClinic Application – Full Stack Development\",\n    techStack: \"Java, Spring Boot, Spring MVC, Spring Data JPA, Hibernate, Thymeleaf, HTML, CSS, JavaScript, MySQL, Maven, Git\",\n    description: `\n        - Developed a full-stack web application for managing veterinary clinic operations using the Spring framework.\n        - Built RESTful APIs with Spring Boot and Spring MVC; implemented data persistence with Spring Data JPA and Hibernate.\n        - Designed and managed relational database schemas with MySQL.\n        - Developed responsive interfaces using Thymeleaf, HTML, CSS, and JavaScript.\n        - Wrote unit and integration tests using JUnit and Mockito.\n        - Managed builds with Maven and version control with Git.\n      `,\n    link: \"https://github.com/Dhruv983/pet-clinic\"\n  }, {\n    title: \"Quiz Web Application – Full Stack Development\",\n    techStack: \"Node.js, Express.js, Prisma, Nunjucks, Passport.js, SQLite, Cypress, JavaScript, HTML, CSS, Git\",\n    description: `\n        - Contributed to the development of a full-stack quiz web application.\n        - Built RESTful APIs with Express.js and implemented data persistence using Prisma ORM.\n        - Designed and managed relational database schemas using SQLite and Prisma.\n        - Developed server-side rendered pages using Nunjucks, enhanced with HTML and CSS.\n        - Implemented user authentication using Passport.js with session-based login.\n        - Wrote end-to-end tests using Cypress for automated testing of user interactions.\n        - Managed version control with Git and automated testing workflows with Cypress.\n      `,\n    link: \"https://github.com/MUN-COMP6905/project-fteam\"\n  }, {\n    title: \"Whole Image Cancer Detection Using Patch-Based Approach\",\n    techStack: \"Python, PyTorch, TensorFlow, Keras, OpenCV, ResNet-50, CBIS-DDSM dataset, Data Augmentation, Jupyter Notebooks, Matplotlib\",\n    description: `\n        - Developed a machine learning model to detect breast cancer from mammogram images using a patch-based analysis approach.\n        - Leveraged the large CBIS-DDSM dataset and preprocessed images into smaller patches for targeted analysis.\n        - Fine-tuned a pre-trained ResNet-50 model to improve detection accuracy.\n        - Employed advanced image processing, deep learning techniques, and heatmap generation to visualize model predictions.\n        - Ensured model robustness through comprehensive performance evaluation metrics, enhancing diagnostic precision in medical imaging.\n      `\n    //link: \"https://github.com/YourGitHub/CancerDetectionApp\" \n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-grid\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Technologies:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 16\n          }, this), \" \", project.techStack]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 23\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View Project on GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Projects","projects","title","techStack","description","link","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","split","line","i","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/dhruv/OneDrive/Desktop/GIT website/Without GIT/src/components/Projects.jsx"],"sourcesContent":["import React from 'react';\r\nimport '../styles/Projects.css';\r\n\r\nconst Projects = () => {\r\n  const projects = [\r\n    {\r\n      title: \"Spring PetClinic Application – Full Stack Development\",\r\n      techStack: \"Java, Spring Boot, Spring MVC, Spring Data JPA, Hibernate, Thymeleaf, HTML, CSS, JavaScript, MySQL, Maven, Git\",\r\n      description: `\r\n        - Developed a full-stack web application for managing veterinary clinic operations using the Spring framework.\r\n        - Built RESTful APIs with Spring Boot and Spring MVC; implemented data persistence with Spring Data JPA and Hibernate.\r\n        - Designed and managed relational database schemas with MySQL.\r\n        - Developed responsive interfaces using Thymeleaf, HTML, CSS, and JavaScript.\r\n        - Wrote unit and integration tests using JUnit and Mockito.\r\n        - Managed builds with Maven and version control with Git.\r\n      `,\r\n      link: \"https://github.com/Dhruv983/pet-clinic\" \r\n    },\r\n    {\r\n      title: \"Quiz Web Application – Full Stack Development\",\r\n      techStack: \"Node.js, Express.js, Prisma, Nunjucks, Passport.js, SQLite, Cypress, JavaScript, HTML, CSS, Git\",\r\n      description: `\r\n        - Contributed to the development of a full-stack quiz web application.\r\n        - Built RESTful APIs with Express.js and implemented data persistence using Prisma ORM.\r\n        - Designed and managed relational database schemas using SQLite and Prisma.\r\n        - Developed server-side rendered pages using Nunjucks, enhanced with HTML and CSS.\r\n        - Implemented user authentication using Passport.js with session-based login.\r\n        - Wrote end-to-end tests using Cypress for automated testing of user interactions.\r\n        - Managed version control with Git and automated testing workflows with Cypress.\r\n      `,\r\n      link: \"https://github.com/MUN-COMP6905/project-fteam\" \r\n    },\r\n    {\r\n      title: \"Whole Image Cancer Detection Using Patch-Based Approach\",\r\n      techStack: \"Python, PyTorch, TensorFlow, Keras, OpenCV, ResNet-50, CBIS-DDSM dataset, Data Augmentation, Jupyter Notebooks, Matplotlib\",\r\n      description: `\r\n        - Developed a machine learning model to detect breast cancer from mammogram images using a patch-based analysis approach.\r\n        - Leveraged the large CBIS-DDSM dataset and preprocessed images into smaller patches for targeted analysis.\r\n        - Fine-tuned a pre-trained ResNet-50 model to improve detection accuracy.\r\n        - Employed advanced image processing, deep learning techniques, and heatmap generation to visualize model predictions.\r\n        - Ensured model robustness through comprehensive performance evaluation metrics, enhancing diagnostic precision in medical imaging.\r\n      `,\r\n      //link: \"https://github.com/YourGitHub/CancerDetectionApp\" \r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"projects-section\">\r\n      <h2>Projects</h2>\r\n      <div className=\"projects-grid\">\r\n        {projects.map((project, index) => (\r\n          <div key={index} className=\"project-card\">\r\n            <h3>{project.title}</h3>\r\n            <p><strong>Technologies:</strong> {project.techStack}</p>\r\n            <p>{project.description.split('\\n').map((line, i) => (\r\n              <span key={i}>\r\n                {line}<br />\r\n              </span>\r\n            ))}</p>\r\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">View Project on GitHub</a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,QAAQ,GAAG,CACf;IACEC,KAAK,EAAE,uDAAuD;IAC9DC,SAAS,EAAE,gHAAgH;IAC3HC,WAAW,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;IACDC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,KAAK,EAAE,+CAA+C;IACtDC,SAAS,EAAE,iGAAiG;IAC5GC,WAAW,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;IACDC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,KAAK,EAAE,yDAAyD;IAChEC,SAAS,EAAE,4HAA4H;IACvIC,WAAW,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;IACM;EACF,CAAC,CACF;EAED,oBACEL,OAAA;IAAKO,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BR,OAAA;MAAAQ,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBZ,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BN,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3Bf,OAAA;QAAiBO,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACvCR,OAAA;UAAAQ,QAAA,EAAKM,OAAO,CAACX;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBZ,OAAA;UAAAQ,QAAA,gBAAGR,OAAA;YAAAQ,QAAA,EAAQ;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,OAAO,CAACV,SAAS;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDZ,OAAA;UAAAQ,QAAA,EAAIM,OAAO,CAACT,WAAW,CAACW,KAAK,CAAC,IAAI,CAAC,CAACH,GAAG,CAAC,CAACI,IAAI,EAAEC,CAAC,kBAC9ClB,OAAA;YAAAQ,QAAA,GACGS,IAAI,eAACjB,OAAA;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GADHM,CAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEN,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACPZ,OAAA;UAAGmB,IAAI,EAAEL,OAAO,CAACR,IAAK;UAACc,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAb,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GARnFG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACU,EAAA,GA9DIrB,QAAQ;AAgEd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}